import flash.events.MouseEvent;
import flash.display.MovieClip;
import flash.display.Graphics;
import flash.filesystem.FileMode;
import flash.filesystem.FileStream;
import flash.filesystem.File;
import flash.desktop.NativeApplication;

var goingLeft: int = 0;
var goingRight: int = 0;
mainstg.x = 2500;
protagonist.gotoAndStop(1);
stage.displayState = StageDisplayState.FULL_SCREEN_INTERACTIVE;

textoptions.visible = false;
oevrtext.visible = false;
bartext.visible = false;

oevrtext.gotoAndStop(1);
bartext.gotoAndStop(1);

var secondsElapsed: int;
var currentTime: Number;
readHour();
secondsElapsed -= 1;

function mainFun(e: Event) {
	handleTime();
	//trace(mainstg.x)
	if (protagonist.currentFrame >= 94) {
		if (goingLeft && mainstg.x <= 2500) {
			mainstg.x += 15;
			protagonist.gotoAndStop(97);
		} else if (goingRight && mainstg.x >= -6200) {
			mainstg.x -= 15;
			protagonist.gotoAndStop(96);
		} else {
			if (mainstg.x > 2500) {
				if (protagonist.currentFrame < 98) {
					protagonist.gotoAndPlay(98);
				}
			} else {
				protagonist.gotoAndStop(95);
			}
		}
	} else {
		mainstg.x = 2500;
	}
	if (protagonist.currentFrame == 1) {
		textoptions.visible = true;
	} else {
		textoptions.visible = false;
	}
	handleTextBox();
}

stage.addEventListener(Event.ENTER_FRAME, mainFun);

function handleTextBox() {
	if (mainstg.x >= -600 && mainstg.x <= -400) {
		oevrtext.visible = true;
	} else {
		oevrtext.visible = false;
		oevrtext.gotoAndStop(1);
		if (mainstg.oevrfull.currentFrame == 10) {
			mainstg.oevrfull.gotoAndPlay(11);
		}
	}
	if (mainstg.x >= 700 && mainstg.x <= 900) {
		bartext.visible = true;
	} else {
		bartext.visible = false;
		bartext.gotoAndStop(1);
	}
	return;
	if (mainstg.x >= 1000 && mainstg.x <= 1200) {
		trace("Third Alien");
		//alientext03.visible = true;
	} else {
		//alientext03.visible = false;
	}
	if (mainstg.x >= 100 && mainstg.x <= 300) {
		trace("Fourth Alien");
		//alientext04.visible = true;
	} else {
		//alientext04.visible = false;
	}
	if (mainstg.x >= 100 && mainstg.x <= 300) {
		trace("Fifth Alien");
		//alientext05.visible = true;
	} else {
		//alientext05.visible = false;
	}
}

function handleDialogue(option: int) {
	if (oevrtext.visible == true) {
		if (oevrtext.currentFrame == 1) {
			if (option == 1) {
				oevrtext.gotoAndStop(2);
				mainstg.oevrfull.gotoAndPlay(2);
			}
		} else if (oevrtext.currentFrame == 2) {
			if (option == 1) {
				oevrtext.gotoAndStop(3);
			}
			if (option == 2){
				oevrtext.gotoAndStop(4);
			}
		} else if (oevrtext.currentFrame == 3) {
			if (option == 1) {
				oevrtext.gotoAndStop(4);
			}
			if (option == 2){
				oevrtext.gotoAndStop(5);
			}
		} else if (oevrtext.currentFrame == 4) {
			if (option == 1) {
				oevrtext.gotoAndStop(6);
			}
			if (option == 2){
				oevrtext.gotoAndStop(7);
			}
			if (option == 3){
				oevrtext.gotoAndStop(5);
			}
		} else if (oevrtext.currentFrame == 6) {
			if (option == 1) {
				oevrtext.gotoAndStop(8);
			}
		} else if (oevrtext.currentFrame == 7) {
			if (option == 1) {
				oevrtext.gotoAndStop(8);
			}
		} else if (oevrtext.currentFrame == 8) {
			if (option == 1) {
				oevrtext.gotoAndStop(9);
			}
			if (option == 2){
				oevrtext.gotoAndStop(10);
			}
			if (option == 3){
				oevrtext.gotoAndStop(11);
			}
		} else if (oevrtext.currentFrame == 9) {
			if (option == 1) {
				oevrtext.gotoAndStop(10);
			}
			if (option == 2){
				oevrtext.gotoAndStop(5);
			}
		} else if (oevrtext.currentFrame == 10) {
			if (option == 1) {
				oevrtext.gotoAndStop(5);
			}
			if (option == 2){
				oevrtext.gotoAndStop(12);
			}
			if (option == 3){
				oevrtext.gotoAndStop(13);
			}
		} else if (oevrtext.currentFrame == 11) {
			if (option == 1) {
				oevrtext.gotoAndStop(13);
			}
		} else if (oevrtext.currentFrame == 12) {
			if (option == 1) {
				oevrtext.gotoAndStop(5);
			}
			if (option == 2) {
				oevrtext.gotoAndStop(14);
			}
		} else if (oevrtext.currentFrame == 13) {
			if (option == 1) {
				oevrtext.gotoAndStop(5);
			}
		} else if (oevrtext.currentFrame == 14) {
			if (option == 1) {
				oevrtext.gotoAndStop(15);
			}
		} else if (oevrtext.currentFrame == 15) {
			if (option == 1) {
				oevrtext.gotoAndStop(16);
			}
			if (option == 2) {
				oevrtext.gotoAndStop(17);
			}
		} else if (oevrtext.currentFrame == 16) {
			if (option == 1) {
				oevrtext.gotoAndStop(18);
			}
			if (option == 2) {
				oevrtext.gotoAndStop(19);
			}
		} else if (oevrtext.currentFrame == 17) {
			if (option == 1) {
				oevrtext.gotoAndStop(15);
			}
		} else if (oevrtext.currentFrame == 19) {
			if (option == 1) {
				oevrtext.gotoAndStop(18);
			}
		}
	}
	if (bartext.visible == true) {
		if (bartext.currentFrame == 1) {
			if (option == 1) {
				bartext.gotoAndStop(2);
			}
		} else if (bartext.currentFrame == 2) {
			if (option == 1) {
				bartext.gotoAndStop(3);
			}
			if (option == 2){
				bartext.gotoAndStop(4);
			}
			if (option == 3){
				bartext.gotoAndStop(5);
			}
		} else if (bartext.currentFrame == 3) {
			if (option == 1) {
				bartext.gotoAndStop(6);
			}
		} else if (bartext.currentFrame == 4) {
			if (option == 1) {
				bartext.gotoAndStop(7);
			}
			if (option == 2){
				bartext.gotoAndStop(6);
			}
		} else if (bartext.currentFrame == 5) {
			if (option == 1) {
				bartext.gotoAndStop(6);
			}
		} else if (bartext.currentFrame == 7) {
			if (option == 1) {
				bartext.gotoAndStop(8);
			}
			if (option == 2) {
				bartext.gotoAndStop(5);
			}
		}
	}
}

stage.addEventListener(KeyboardEvent.KEY_DOWN, pressMultipleKeys);
function pressMultipleKeys(evt0: KeyboardEvent) {
	if (evt0.keyCode == 49) {
		if (protagonist.currentFrame == 1) {
			protagonist.gotoAndPlay(2);
		}
	} else if (evt0.keyCode == 50) {
		if (protagonist.currentFrame == 1) {
			leaveRegular();
			//fscommand("quit");
		}
	} else if (evt0.keyCode == 37 || evt0.keyCode == 65) { //left
		goingLeft = 1;
	} else if (evt0.keyCode == 39 || evt0.keyCode == 68) { //right
		goingRight = 1;
	}
	if (evt0.keyCode >= 49 && evt0.keyCode <= 57) {
		if (protagonist.currentFrame >= 95 && protagonist.currentFrame <= 97) {
			handleDialogue(evt0.keyCode - 48);
		}
	}
}

stage.addEventListener(KeyboardEvent.KEY_UP, pressTakeKeys);
function pressTakeKeys(evt00: KeyboardEvent) {
	if (evt00.keyCode == 13) {
		1;
	} else if (evt00.keyCode == 37 || evt00.keyCode == 65) { //left
		goingLeft = 0;
	} else if (evt00.keyCode == 39 || evt00.keyCode == 68) { //right
		goingRight = 0;
	}
}

function leaveRegular(){
	writeHour();
	var file: File = File.documentsDirectory;
	file = file.resolvePath("spacebarlogP.txt");
	var stream: FileStream = new FileStream();
	stream.open(file, FileMode.WRITE);
	stream.writeUTFBytes("1");
	stream.close();
	NativeApplication.nativeApplication.exit();
}

function leaveTimeReset(){
	var file: File = File.documentsDirectory;
	file = file.resolvePath("spacebarlogT.txt");
	var stream: FileStream = new FileStream();
	stream.open(file, FileMode.WRITE);
	stream.writeUTFBytes("0");
	stream.close();
	
	var file3: File = File.documentsDirectory;
	file3 = file3.resolvePath("spacebarlogP.txt");
	var stream3: FileStream = new FileStream();
	stream3.open(file3, FileMode.WRITE);
	stream3.writeUTFBytes("1");
	stream3.close();
	
	var file2: File = File.documentsDirectory;
	file2 = file2.resolvePath("spacebarlogS.txt");
	var stream2: FileStream = new FileStream();
	stream2.open(file2, FileMode.WRITE);
	stream2.writeUTFBytes("2");
	stream2.close();
	
	NativeApplication.nativeApplication.exit();	
}

function readHour(){
	var file2: File = File.documentsDirectory;
	file2 = file2.resolvePath("spacebarlogT.txt");
	var fileStream: FileStream = new FileStream();
	fileStream.open(file2, FileMode.READ);
	var fileText: String = fileStream.readUTFBytes(fileStream.bytesAvailable);
	fileStream.close();
	secondsElapsed = 35;
	secondsElapsed = int(fileText);
}

function writeHour(){
	currentTime = secondsElapsed + getTimer()/1000;
	var timeToPrint: int;
	timeToPrint = int(currentTime);
	trace(timeToPrint);
	
	var file: File = File.documentsDirectory;
	file = file.resolvePath("spacebarlogT.txt");
	var stream: FileStream = new FileStream();
	stream.open(file, FileMode.WRITE);
	stream.writeUTFBytes(String(timeToPrint));
	stream.close();
}

function handleTime(){
	currentTime = secondsElapsed + getTimer()/1000;
	
	var timeToCheck: int;
	timeToCheck = int(currentTime);
	if (timeToCheck > 300){
		leaveTimeReset();
	}
}